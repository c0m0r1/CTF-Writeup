def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise Exception('modular inverse does not exist')
    else:
        return x % m


m = 0x2006161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161


p = 0x8a13fc039d5e971435da9940e8d3a862173c12dcb32b3e6032232f6e5c01fb1f7e813433f7afad7f95ca0f2e895f0970a6a6368d05644f77c2e6014d4fcac7725bb57d1fab2a329e0012058c4bc298d7b17d205602c3152162ef632035eb8567760e6650975641814aa0093351903d7a343e8b619bed3b116a4c3f61eb1bf769
q = 0xad9d85a444266ad737c62ab6601cadd8ded833978f98edb96f97b3cdc4f157d76591253fa7fd1c1ed4985e5dec215149586efd812eae886a1ec10d939169f3abdf58e7f2856a4455d68d97917a29a41015fd415f64d46d6bbf7e55ea53e6879dfe4f904682f4898cd2940629a2c8080d0303cd5a49b2b36cc8dafa4bc01c2931
d = 0x3f6bbe648c6be02c01d1a0418e9c2a3c3adeb5877ab43f472014db67fb5c98af32b85e31b0e4b24b51b8e388416613f92356d7e2f8b722e146afedf0fa11344a42e461c77e34f9f57da3292ba57b3c6ff9a15ff8a2e0457089c23d0ae178ed258c12538c4caa519026b437a2d9422631aee42ee8f57f8b7990d2a3af6c2f4c45991679756edb088eaf8d462a811a592409013d43d790cfe269dee52b586c4816990f21be21dde7815ccf5d3c0c9b9b4b24baa4376c7509ffaa0fd3dd9e032a78e59ecd220bc9e95889f12369a585873e737f1534c1f940a122790a362330ec7e45e725f3d8b93024e138924dc1022279146afcfba0bd77dfb3262a84fc84e701
n = 0x5da477a4fb0dc9b6fe6dd98f631bcb0864771764f7fb4249fb9dd52fb0d9588de6f757a5015d06c56fa084e4494ed3e582e3b323ddc6994235996ed2d7014b438e8841dd76b0249a91a59499c772ba732dd6466631e808201bfa2dea9af0744404b4a377eeb0746d5add59ae3887306399d50dacfecaadb3f63e0fe8486ef891da747d1366ed2d9ff15618c27bf6ba8dcbcf667870fade6deaf67bfc26fe25a2e30b220e373f4dbd081edddff0272119e6628186ab47dc8ee2e2477d66538b4e200febfad0340f6d4cb213ebe9782ceae2edd75ad94e3b032e23475e6e2175077fa231640764593cee817e2bfbd49b2f0ec567df2597f3ebd60186c64a762c19
e = 0x10001
sig = 0x5bc5399701e8755f93f4f2725c26bae1ff4ead1fdb26a2af13656e007873c5182117773597fe26209366ca3362e0c890a3a4a453101294c82ad4eeed25c0c810918cf6a7e469c07f9da16358dd3d1a8ce5f4c0f0bc9b11ff85fa8fedcebec51b43dabe796c28698eb4df481c787f60ede39e5e38a7fc0e9893e66c9b3ca57b960289255678229a2d17a96c8f811d0c7dae85ea9068d931c08476f7a3b6b46ccb9d5189423f6c7afd4ee5d446eeea1fb33d8b77e1892aebc5593ec03f0c11cc7ee6c9bc88e10b902875cd2459f64f959df4df17285c8fa905c26b6b9f3beb98b4122076ac0172c31411d5b72f597c4d84ec4be1d1106d657e35a49be410f9583e

assert(p * q == n)
phi = (p - 1) * (q - 1)
assert(d == modinv(e, phi))

# this will be overwrited
sp = 0x00c72fbdc34f675280db478228378dccbfc24faba61ed441f8e7609512fd085efe1fd7af21c60260931cf7ff26ed30ac7220b37ff854c9e9bee685f54601fe1a62de7d10811dda23187e5b47d8d90f022cdf8f1404383c003626ee0b909b91932b522916825cdb3569434f0d6ab7a965de1f23e71fb4e9341ef5185da83ede07
sq = 0x982deab5cc6e2043bef89d76abd94306a65482c07d6c71220f3f40b7dfeed641239eb8722d751f25509b13d76400bbe57052188c52ffe35ca7ab4c611ff9b65f1c50670bf053db7c037f6ce99d552a9419224152edc5bbd7af29c491853539adb3264ebd6785dbaf836074fb5fd337ba558533cc4f35eeffe7369d0d03100774

#this will overwrite sp
qi = 0x336822dbe539b9d35cb9f73caf971a636a8f9e57ba046b8719489475a30e3ad929ca1df7dddd761cb9d4cc95d1d33ff30ea882a2a0f7e1327a9bfc338169eb5afe35a1280b2c06cd696e6b4657198dfa7abb19f518d76a4beefe21bce61958f8955cfc2a0e77f624709690ba9bf414d63a824ee69eb8e8f07ff77b129410d2b3

sp_minus_sq = 0x0baadb1448bc444d464c5c7d9e7346670623ea639fc4228a33bc4e468c368059af5f6ac423ce09b67f9d49a7a4f97a90896c64741922d7bf261a995e9b208022a2d0f502d9e8fcb041e1ac5e3e527d4ae9a1101a3463b9c999e67275dd4ee518bc02ba2d49f1be0b51dc95293590de58b12c9e440c3df22e41b02e4e5b07d060f673f21fa6eff34c1

qi_mul_sp_minus_sq = 0x143c64e26d8deac54cefc6cfaa76cdd7f77d33a09cf1c8513bb928aa18d9a1abfdc069ca510972366d6ee8c845a6f16b01b5ac8facae0c65ed6943d8593c7268adc79aa5968d9a44b4a406b9abdb0361da157344ad50ea38dc8f4d02dee562a35a9659123776daa10f7f96ee74625f1bf48e897761cbad36c31923d3578498947ad9d65da62068d052112233b42af09ae36d731c74ed7ddc50e623cc1f118e7d6d8f6884c4eb7fb4760b563e9d9a1719803c4e349cc499f0c9c8ede9d0f8a549f609db28e7cfedfb3c627640187543fde9769eb5a260f383bb52224d38dab3d4fb4adcef8f3f910285b252cd9d2aa4ce50d0d6ea3c489a55f4581c2dd5c834f3
qi_mul_sp_minus_sq_mod_p = 0x143c64e26d8deac54cefc6cfaa76cdd7f77d33a09cf1c8513bb928aa18d9a1abfdc069ca510972366d6ee8c845a6f16b01b5ac8facae0c65ed6943d8593c7268adc79aa5968d9a44b4a406b9abdb0361da157344ad50ea38dc8f4d02dee562a35a9659123776daa10f7f96ee74625f1bf48e897761cbad36c31923d357849894875154739e563b7530cd1e19f106602086b7601349e451030164314426c760d3673ae747372883f5978e9cb00fcccd2b397c5f48355dd5abfed04be28dea68ca141e536794da1608406513250de656d842ab39b37cdf85953a48c9b7b0217450d3d4b33735a8d3d897ae203e6975fe661766aa6275509bc23826daf83b9bcaea
q_mul_qi_sp_minus_sq_mod_p = 0x5bc5399701e8755f93f4f2725c26bae1ff4ead1fdb26a2af13656e007873c5182117773597fe26209366ca3362e0c890a3a4a453101294c82ad4eeed25c0c810918cf6a7e469c07f9da16358dd3d1a8ce5f4c0f0bc9b11ff85fa8fedcebec51b43dabe796c28698eb4df481c787f60ede39e5e38a7fc0e9893e66c9b3ca57b956a5b3aa0abb479e958b0cf18d543c977083167cfeb6cc09e7537b6ebd6c5968a79b2d0d011f75bd7fe4ac06f8ae963cdcd395f55362b0868b19373ddec18161fca79557cf0b7b4ac724db77058fa6b09dbbcd5d56ec9ed2e1341a70db6b65f065efa27ee99ece7648e754233f9a915ca96c6ae04c137767e4e6dfed70de950ca
sq_add_q_mul_qi_sp_minus_sq_mod_p = 0x5bc5399701e8755f93f4f2725c26bae1ff4ead1fdb26a2af13656e007873c5182117773597fe26209366ca3362e0c890a3a4a453101294c82ad4eeed25c0c810918cf6a7e469c07f9da16358dd3d1a8ce5f4c0f0bc9b11ff85fa8fedcebec51b43dabe796c28698eb4df481c787f60ede39e5e38a7fc0e9893e66c9b3ca57b960289255678229a2d17a96c8f811d0c7dae85ea9068d931c08476f7a3b6b46ccb9d5189423f6c7afd4ee5d446eeea1fb33d8b77e1892aebc5593ec03f0c11cc7ee6c9bc88e10b902875cd2459f64f959df4df17285c8fa905c26b6b9f3beb98b4122076ac0172c31411d5b72f597c4d84ec4be1d1106d657e35a49be410f9583e
sq_add_q_mul_qi_sp_minus_sq_mod_p_mod_n = 0x5bc5399701e8755f93f4f2725c26bae1ff4ead1fdb26a2af13656e007873c5182117773597fe26209366ca3362e0c890a3a4a453101294c82ad4eeed25c0c810918cf6a7e469c07f9da16358dd3d1a8ce5f4c0f0bc9b11ff85fa8fedcebec51b43dabe796c28698eb4df481c787f60ede39e5e38a7fc0e9893e66c9b3ca57b960289255678229a2d17a96c8f811d0c7dae85ea9068d931c08476f7a3b6b46ccb9d5189423f6c7afd4ee5d446eeea1fb33d8b77e1892aebc5593ec03f0c11cc7ee6c9bc88e10b902875cd2459f64f959df4df17285c8fa905c26b6b9f3beb98b4122076ac0172c31411d5b72f597c4d84ec4be1d1106d657e35a49be410f9583e
